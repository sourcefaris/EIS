<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <title>Register Dashboard</title>
  <link type="text/css" rel="stylesheet" href="../../style.css">
  <link href="../../tabmenu/tabmenu.css" rel="stylesheet" type="text/css" />
  <script src="../../tabmenu/tabmenu.js" type="text/javascript"></script>
  <link href="../../css/jquery-ui.css" rel="stylesheet" type="text/css" />
  <script src="../../js/jquery-2.1.3.min.js" type="text/javascript"></script>
  <script src="../../js/jquery-menu/jquery-ui.js" type="text/javascript"></script>
  
  <style>
	.custom-combobox {
		position: relative;
		display: inline-block;
	}
	.custom-combobox-toggle {
		position: absolute;
		top: 0;
		bottom: 0;
		margin-left: -1px;
		padding: 0;
	}
	.custom-combobox-input {
		margin: 0;
		padding: 5px 10px;
	}
	</style>
	<script>
	(function( $ ) {
		$.widget( "custom.combobox", {
			_create: function() {
				this.wrapper = $( "<span>" )
					.addClass( "custom-combobox" )
					.insertAfter( this.element );

				this.element.hide();
				this._createAutocomplete();
				this._createShowAllButton();
			},

			_createAutocomplete: function() {
				var selected = this.element.children( ":selected" ),
					value = selected.val() ? selected.text() : "";

				this.input = $( "<input>" )
					.appendTo( this.wrapper )
					.val( value )
					.attr( "title", "" )
					.addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
					.autocomplete({
						delay: 0,
						minLength: 0,
						source: $.proxy( this, "_source" )
					})
					.tooltip({
						tooltipClass: "ui-state-highlight"
					});

				this._on( this.input, {
					autocompleteselect: function( event, ui ) {
						ui.item.option.selected = true;
						this._trigger( "select", event, {
							item: ui.item.option
						});
					},

					autocompletechange: "_removeIfInvalid"
				});
			},

			_createShowAllButton: function() {
				var input = this.input,
					wasOpen = false;

				$( "<a>" )
					.attr( "tabIndex", -1 )
					.attr( "title", "Show All Items" )
					.tooltip()
					.appendTo( this.wrapper )
					.button({
						icons: {
							primary: "ui-icon-triangle-1-s"
						},
						text: false
					})
					.removeClass( "ui-corner-all" )
					.addClass( "custom-combobox-toggle ui-corner-right" )
					.mousedown(function() {
						wasOpen = input.autocomplete( "widget" ).is( ":visible" );
					})
					.click(function() {
						input.focus();

						// Close if already visible
						if ( wasOpen ) {
							return;
						}

						// Pass empty string as value to search for, displaying all results
						input.autocomplete( "search", "" );
					});
			},

			_source: function( request, response ) {
				var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
				response( this.element.children( "option" ).map(function() {
					var text = $( this ).text();
					if ( this.value && ( !request.term || matcher.test(text) ) )
						return {
							label: text,
							value: text,
							option: this
						};
				}) );
			},

			_removeIfInvalid: function( event, ui ) {

				// Selected an item, nothing to do
				if ( ui.item ) {
					return;
				}

				// Search for a match (case-insensitive)
				var value = this.input.val(),
					valueLowerCase = value.toLowerCase(),
					valid = false;
				this.element.children( "option" ).each(function() {
					if ( $( this ).text().toLowerCase() === valueLowerCase ) {
						this.selected = valid = true;
						return false;
					}
				});

				// Found a match, nothing to do
				if ( valid ) {
					return;
				}

				// Remove invalid value
				this.input
					.val( "" )
					.attr( "title", value + " didn't match any item" )
					.tooltip( "open" );
				this.element.val( "" );
				this._delay(function() {
					this.input.tooltip( "close" ).attr( "title", "" );
				}, 2500 );
				this.input.autocomplete( "instance" ).term = "";
			},

			_destroy: function() {
				this.wrapper.remove();
				this.element.show();
			}
		});
	})( jQuery );

	$(function() {
		$( "#combobox" ).combobox();
		$( "#toggle" ).click(function() {
			$( "#combobox" ).toggle();
		});
	});
	</script>
 
</head>
<body onload="HTMLArea.replaceAll();">
<ul id="tabmenu">
    <li><a href="#">New</a></li>
    <li><a href="search.action">Search</a></li>
</ul>
#if (!$actionErrors.isEmpty())
<div class="error_box"><ul class="errorMessage">
#foreach( $!error in $!actionErrors ) 
<li>$!error</li>
#end
</ul>
</div>
#end
#if($!error==true)<div class="warning_box">#sfielderror()</div>#end
#if (!$actionMessages.isEmpty())
<div class="valid_box"><ul>
#foreach( $!m in $!actionMessages ) 
<li>$!m</li>
#end
</ul>
</div>
#end
<form method="post" action="form.action">
  <table bgcolor="#98COF4" border="0" cellpadding="5" cellspacing="1" width="100%">
    <tbody>
      <tr bgcolor="#d0dcff">
        <td colspan="3"><b>Register Dashboard</b></td>
      </tr>
      <tr bgcolor="#ffffff">
        <td style="font-weight: bold;" align="right"  valign="top" width="25%">
        	<font color="red">*</font>
        	Select Workbook :
        	</td>
        <td width="75%">
        <select id="combobox" name="workbookId">
        #foreach($!wk in $!workbooks)
        	<option value="$!wk.id">$!wk.contentUrl&nbsp;&nbsp;</option>
        #end
        </select>
        </td>
      </tr>
      <tr bgcolor="#e4e4e4">
        <td colspan="3"><input name="Submit" value="Next >>" type="submit"></td>
      </tr>
   </tbody>
</table>
</form>
</body>
</html>
